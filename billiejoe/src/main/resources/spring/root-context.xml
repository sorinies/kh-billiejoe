<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSourceSpied"
		class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" /> 
		<property name="username" value="billiejoe" />
		<property name="password" value="billiejoe_a0316" />
		
		<!-- defaultAutoCommit: SQL 수행 후 자동 COMMIT 설정. (기본값 : true) -->
		<property name="defaultAutoCommit" value="false" />
		
		<!-- 커넥션 풀 설정 -->
		<property name="initialSize" value="10" /> <!-- 초기 커넥션 수, 기본 0 -->
		<property name="maxTotal" value="500" /> <!-- 최대 커넥션 수, 기본 8 -->
		<property name="maxIdle" value="100" /> <!-- 유휴 상태로 존재할 수 있는 커넥션 최대 수, 기본 8 -->
		<property name="minIdle" value="10" /> <!-- 유휴 상태로 존재할 수 있는 커넥션 최소 수, 기본 0 -->
		<property name="maxWaitMillis" value="-1" /> <!-- 예외 발생 전 커넥션이 반환 될 떄 까지 대기하는 최대 시간(ms), 기본 -1(무기한) -->

	</bean>
	
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource"> 
    <constructor-arg ref="dataSourceSpied" /> 
    <property name="logFormatter"> 
       <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter"> 
          <property name="loggingType" value="MULTI_LINE" /> 
          <property name="sqlPrefix" value="SQL : "/> 
       </bean> 
    </property> 
	</bean>


	<!-- 마이바티스 SqlSession 등록하기 (xml 방식으로 bean 등록) -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	
		<!-- mybatis-config.xml 설정 불러오기 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- SqlSessionTemplate : 기본 SQL 실행 + 트랜잭션 관리 역할을 하는 SqlSession을 생성할 수 있게 
		하는 객체(Spring bean으로 등록해야함.) -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactoryBean" />
	</bean>

	<!-- 스프링에서 사용하는 proxy를 이용한 트랜잭션 제어가 안될 경우 추가적인 트랜잭션 매니저를 추가해서 문제 해결 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- @Transactional 어노테이션을 인식 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- 파일 업로드를 위한 MultipartResolver Bean으로 등록하기 CommonsMultipartResolver : 
		MultipartResolver를 상속 받아 구현한 클래스로 multipart/form-data 형식의 요청 시 input type 
		= "file"태그를 자동으로 인식하여 MultipartFile 객체의 형태로 반환 파일 외의 파라미터는 기존처럼 사용 가능 + 해당 
		객체를 만들기 위해서는 commons-fileupload 라이브러리가 필요하다 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
		<property name="maxUploadSizePerFile" value="104857600" />
		<property name="maxInMemorySize" value="104857600" />
	</bean>
	<!-- maxUploadSize : 한 요청당 허용되는 업로드 최대용량(byte 단위) -1은 무제한(기본값) 104857600byte 
		== 100MB maxUploadSizePerFile : 한 파일당 허용되는 업로드 최대 용량 maxInMemorySize : 디스크에 
		저장하지 않고 메모리에 유지할 수 있는 허용 용량 해당 용량 초과 시 자동으로 디스크에 저장 -->
	
	
	<!-- 이메일 빈 등록 -->
	<!-- Gmail -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="zxcvzvv55@gmail.com" />
		<property name="password" value="mqndwvrjariggkfh" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

</beans>
